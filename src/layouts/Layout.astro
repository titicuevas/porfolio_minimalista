---
import { basics } from "@cv"
import ThemeSwitcher from "@/components/ThemeSwitcher.astro"

interface Props {
  title: string
}

const { title } = Astro.props

const { image, summary, url } = basics
---

<!doctype html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <title>{title}</title>
    <meta name="description" content={summary} />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="preload" as="image" href={image} />
    
    <!-- Fuentes Pixel Art -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Press+Start+2P&family=VT323&family=Silkscreen:wght@400;700&display=swap" rel="stylesheet">

    <meta property="og:url" content={url} />
    <meta property="og:type" content="website" />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={summary} />
    <meta property="og:image" content="" />

    <meta name="twitter:card" content="summary_large_image" />
    <meta property="twitter:domain" content={url.split("//")[1] ?? ''} />
    <meta property="twitter:url" content={url} />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={summary} />
    <meta name="twitter:image" content="" />
  </head>
  <body>
    <ThemeSwitcher />
    <slot />
  </body>
</html>

<style is:global>
  /*
   * Remove all animations and transitions for people that prefer not to see them
   */
  :root {
    /* Pixel Art Theme - Light */
    --bg-color: #eaeaea;
    --text-color: #232323;
    --primary-color: #ff6b6b;
    --card-bg-color: #f7f7f7;
    --card-border-color: #bdbdbd;
    --accent-color: #4ecdc4;
    --pixel-border: 2px;
    --pixel-shadow: 4px 4px 0px rgba(0, 0, 0, 0.18);
    --pixel-shadow-hover: 6px 6px 0px rgba(0, 0, 0, 0.22);
    
    /* Colores retro adicionales */
    --retro-yellow: #ffd93d;
    --retro-green: #6bcf7f;
    --retro-blue: #4d96ff;
    --retro-purple: #9b59b6;
    --retro-orange: #ff8c42;
    /* Terminal */
    --terminal-bg: #e0e0e0;
    --terminal-text: #232323;
    --terminal-command: #1a237e;
  }

  html.dark {
    /* Pixel Art Theme - Dark */
    --bg-color: #1a1a1a;
    --text-color: #e0e0e0;
    --primary-color: #ff6b6b;
    --card-bg-color: #232323;
    --card-border-color: #404040;
    --accent-color: #4ecdc4;
    --pixel-shadow: 4px 4px 0px rgba(255, 255, 255, 0.1);
    --pixel-shadow-hover: 6px 6px 0px rgba(255, 255, 255, 0.2);
    /* Terminal */
    --terminal-bg: #000000;
    --terminal-text: #6bcf7f;
    --terminal-command: #4d96ff;
  }

  html {
    font-family: "VT323", "Press Start 2P", monospace;
    scroll-behavior: smooth;
    background: var(--bg-color);
    color: var(--text-color);
    letter-spacing: 0.5px;
    image-rendering: pixelated;
    image-rendering: -moz-crisp-edges;
    image-rendering: crisp-edges;
  }

  body,
  figure {
    margin: 0;
    padding: 0;
  }

  a {
    text-decoration: none;
    color: var(--primary-color);
    transition: all 0.2s ease;
  }

  a:hover {
    color: var(--accent-color);
    text-shadow: 2px 2px 0px rgba(0, 0, 0, 0.3);
  }

  ul {
    list-style: none;
    margin: 0;
    padding: 0;
  }

  *,
  *::before,
  *::after {
    box-sizing: border-box;
  }

  h1,
  h2,
  h3,
  h4 {
    margin: 0;
    color: var(--text-color);
    font-family: "Press Start 2P", monospace;
    text-shadow: 2px 2px 0px rgba(0, 0, 0, 0.2);
    letter-spacing: 1px;
  }

  h1 {
    font-size: 1.8rem;
    line-height: 1.4;
  }

  h2 {
    font-size: 1.4rem;
    line-height: 1.5;
  }

  h3 {
    font-size: 1.2rem;
    line-height: 1.6;
  }

  p {
    color: var(--text-color);
    font-size: 1.1rem;
    line-height: 1.6;
    margin: 0;
    text-wrap: pretty;
    font-family: "VT323", monospace;
  }

  /* Efectos pixelados para botones y elementos interactivos */
  .pixel-button {
    background: var(--primary-color);
    border: var(--pixel-border) solid var(--text-color);
    box-shadow: var(--pixel-shadow);
    padding: 12px 24px;
    font-family: "Press Start 2P", monospace;
    font-size: 0.8rem;
    cursor: pointer;
    transition: all 0.1s ease;
    text-transform: uppercase;
    letter-spacing: 1px;
    color: #fff;
    text-shadow: 1px 1px 0px #232323, 2px 2px 0px #ff8c42;
  }

  .pixel-button:hover {
    transform: translate(-2px, -2px);
    box-shadow: var(--pixel-shadow-hover);
  }

  .pixel-button:active {
    transform: translate(0px, 0px);
    box-shadow: 2px 2px 0px rgba(0, 0, 0, 0.2);
  }

  /* Cards con estilo pixelado */
  .pixel-card {
    background: var(--card-bg-color);
    border: var(--pixel-border) solid var(--card-border-color);
    box-shadow: var(--pixel-shadow);
    padding: 20px;
    transition: all 0.2s ease;
  }

  .pixel-card:hover {
    transform: translate(-2px, -2px);
    box-shadow: var(--pixel-shadow-hover);
  }

  /* Animaci√≥n de escritura para el prompt */
  @keyframes typing {
    from { width: 0; }
    to { width: 100%; }
  }

  @keyframes blink {
    0%, 50% { border-color: transparent; }
    51%, 100% { border-color: var(--primary-color); }
  }

  .typing-effect {
    overflow: hidden;
    border-right: 3px solid var(--primary-color);
    white-space: nowrap;
    animation: typing 3s steps(40, end), blink 1s step-end infinite;
  }

  .print {
    display: none !important;
  }

  @media print {
    .no-print {
      display: none !important;
    }

    .print {
      display: block !important;
    }

    astro-dev-toolbar {
      display: none !important;
    }

    article {
      break-inside: avoid;
    }
  }

  /* Animaci√≥n de entrada para secciones con estilo pixelado */
  .fade-section {
    opacity: 0;
    transform: translateY(80px);
    transition: opacity 0.7s cubic-bezier(0.17, 0.55, 0.55, 1), transform 0.7s cubic-bezier(0.17, 0.55, 0.55, 1);
    will-change: opacity, transform;
  }
  .fade-section.visible {
    opacity: 1;
    transform: translateY(0);
  }

  /* Responsive para fuentes pixeladas */
  @media (max-width: 768px) {
    h1 {
      font-size: 1.4rem;
    }
    h2 {
      font-size: 1.2rem;
    }
    h3 {
      font-size: 1rem;
    }
    p {
      font-size: 1rem;
    }
  }

  .btn-secondary, .pixel-button.btn-secondary {
    background: transparent !important;
    color: var(--primary-color) !important;
    border: var(--pixel-border) solid var(--primary-color) !important;
    box-shadow: var(--pixel-shadow);
    text-shadow: 1px 1px 0px #fff, 2px 2px 0px #ff8c42;
    font-family: "Press Start 2P", monospace;
    transition: all 0.15s;
  }
  html.dark .btn-secondary, html.dark .pixel-button.btn-secondary {
    background: transparent !important;
    color: var(--primary-color) !important;
    border: var(--pixel-border) solid var(--primary-color) !important;
    box-shadow: var(--pixel-shadow);
    text-shadow: 1px 1px 0px #232323, 2px 2px 0px #ff8c42;
  }
  .btn-secondary:hover, .pixel-button.btn-secondary:hover {
    background: var(--primary-color) !important;
    color: #fff !important;
    border-color: var(--primary-color) !important;
    text-shadow: none;
  }

  html, body, * {
    cursor: url('/pixel-cursor.png'), auto !important;
  }

  /* Efecto glitch pixel art para t√≠tulos y botones (m√°s notorio) */
  @keyframes glitch {
    0% { text-shadow: 4px 0 #ff8c42, -4px 0 #4d96ff, 0 4px #ffd93d, 0 0 #fff; transform: translate(0, 0); }
    10% { text-shadow: -4px 0 #ff8c42, 4px 0 #4d96ff, 0 -4px #ffd93d, 0 0 #fff; transform: translate(-2px, 2px); }
    20% { text-shadow: 4px 4px #4ecdc4, -4px -4px #9b59b6, 4px -4px #ffd93d, 0 0 #fff; transform: translate(2px, -2px); }
    30% { text-shadow: -4px 4px #ff8c42, 4px -4px #4d96ff, -4px -4px #ffd93d, 0 0 #fff; transform: translate(-2px, 2px); }
    40% { text-shadow: 4px 0 #ff8c42, -4px 0 #4d96ff, 0 4px #ffd93d, 0 0 #fff; transform: translate(2px, 0); }
    50% { text-shadow: none; transform: translate(0, 0); }
    100% { text-shadow: none; transform: none; }
  }
  h1:hover, h2:hover, h3:hover, h4:hover, .pixel-section-title:hover {
    animation: glitch 0.7s steps(2, end) 1;
  }
  .pixel-button:hover, .btn-secondary:hover {
    animation: glitch 0.7s steps(2, end) 1;
  }

  .konami-message {
    position: fixed;
    top: 32px;
    left: 50%;
    transform: translateX(-50%);
    background: #232323;
    color: #ffd93d;
    border: 3px solid #ff8c42;
    font-family: "Press Start 2P", monospace;
    font-size: 1.1rem;
    padding: 18px 32px;
    z-index: 9999;
    box-shadow: 0 4px 32px #000a, 2px 2px 0 #fff;
    text-align: center;
    border-radius: 12px;
    animation: konami-pop 0.5s;
    letter-spacing: 2px;
  }
  @keyframes konami-pop {
    0% { transform: translateX(-50%) scale(0.7); opacity: 0; }
    100% { transform: translateX(-50%) scale(1); opacity: 1; }
  }
</style>

<script>
  // Animaci√≥n de fade-in para secciones
  window.addEventListener('DOMContentLoaded', () => {
    const sections = document.querySelectorAll('.fade-section');
    const observer = new window.IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('visible');
          observer.unobserve(entry.target);
        }
      });
    }, { threshold: 0.15 });
    sections.forEach(section => observer.observe(section));
  });

  // Konami Code: ‚Üë ‚Üë ‚Üì ‚Üì ‚Üê ‚Üí ‚Üê ‚Üí B A
  const KONAMI = [38,38,40,40,37,39,37,39,66,65];
  let konamiIndex = 0;
  function showKonamiMessage() {
    if (document.getElementById('konami-message')) return;
    const msg = document.createElement('div');
    msg.id = 'konami-message';
    msg.className = 'konami-message';
    msg.innerHTML = '¬°Logro desbloqueado!<br>Has encontrado el <b>Konami Code</b> üéÆ';
    document.body.appendChild(msg);
    setTimeout(() => {
      msg.remove();
    }, 4000);
  }
  window.addEventListener('keydown', (e) => {
    if (e.keyCode === KONAMI[konamiIndex]) {
      konamiIndex++;
      if (konamiIndex === KONAMI.length) {
        showKonamiMessage();
        konamiIndex = 0;
      }
    } else {
      konamiIndex = 0;
    }
  });

  function showSnakeAnimation() {
    if (document.getElementById('snake-konami')) return;
    const canvas = document.createElement('canvas');
    canvas.id = 'snake-konami';
    canvas.width = window.innerWidth;
    canvas.height = 64;
    canvas.style.position = 'fixed';
    canvas.style.left = '0';
    canvas.style.top = '50%';
    canvas.style.transform = 'translateY(-50%)';
    canvas.style.zIndex = '99999';
    canvas.style.pointerEvents = 'none';
    canvas.style.display = 'block';
    document.body.appendChild(canvas);
    const ctx = canvas.getContext('2d');
    if (!ctx) { canvas.remove(); return; }
    // Snake body (pixel art)
    const snakeLength = 14;
    const pixel = 20;
    let x = -snakeLength * pixel;
    function drawSnake() {
      ctx?.clearRect(0, 0, canvas.width, canvas.height);
      for (let i = 0; i < snakeLength; i++) {
        if (ctx) ctx.fillStyle = i === 0 ? '#ffd93d' : '#4ecdc4';
        ctx?.fillRect(x + i * pixel, 20, pixel, pixel);
        // Ojos
        if (i === 0) {
          if (ctx) ctx.fillStyle = '#232323';
          ctx?.fillRect(x + 6, 28, 4, 4);
          ctx?.fillRect(x + 12, 28, 4, 4);
        }
      }
    }
    function animate() {
      x += 10;
      drawSnake();
      if (x < window.innerWidth) {
        requestAnimationFrame(animate);
      } else {
        canvas.remove();
      }
    }
    animate();
  }
</script>
