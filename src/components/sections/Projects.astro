---
import GitHub from "@/icons/GitHub.astro"
import Section from "../Section.astro"

import { projects } from "@cv"
---

<Section title="Proyectos">
  <div class="projects-wrapper">
    <ul>
      {
        projects.map(
          ({ url, description, highlights, name, isActive, github, image, stack }) => {
            // Detectar si hay usuario demo en la descripciÃ³n
            let testUser = null;
            let desc = description;
            const userMatch = description.match(/Usuario de prueba: (.+)\nContraseÃ±a: (.+)/) || description.match(/Usuario: (.+)\nContraseÃ±a: (.+)/);
            if (userMatch) {
              testUser = {
                user: userMatch[1].trim(),
                pass: userMatch[2].trim()
              };
              desc = description.replace(/\n?Usuario( de prueba)?: .+\nContraseÃ±a: .+/, "");
            }
            return (
              <li class="project-card">
                <article>
                  <div class="project-image">
                    {image ? (
                      <img src={image} alt={`Logo de ${name}`} />
                    ) : (
                      <div class="project-placeholder">ðŸš€</div>
                    )}
                  </div>
                  <header>
                    <h3 class="project-title">
                      <a href={url} target="_blank" title={`Ver el proyecto ${name}`}>{name}</a>
                      {isActive && <span class="project-dot">â€¢</span>}
                    </h3>
                    <p class="project-desc">{desc}</p>
                    {testUser && (
                      <div class="project-demo-access">
                        <span class="demo-icon">ðŸ”‘</span>
                        <div>
                          <strong>Â¿Quieres probar la app?</strong><br/>
                          Usuario: <button class="copy-btn" type="button" data-copy={testUser.user}>{testUser.user}</button><br/>
                          ContraseÃ±a: <button class="copy-btn" type="button" data-copy={testUser.pass}>{testUser.pass}</button>
                        </div>
                      </div>
                    )}
                  </header>
                  <div class="project-badges">
                    {highlights.map((highlight) => {
                      return <span class="project-badge">{highlight}</span>
                    })}
                  </div>
                  <footer class="project-actions">
                    {url && (
                      <a href={url} target="_blank" class="project-btn">Ver demo</a>
                    )}
                    {github && (
                      <a href={github} target="_blank" class="project-btn code-btn">
                        <GitHub /> CÃ³digo
                      </a>
                    )}
                  </footer>
                </article>
              </li>
            )
          }
        )
      }
    </ul>
  </div>
</Section>

<style>
  :root {
    --color-primary: #2563eb;
    --color-accent: #38bdf8;
    --color-bg: #f3f4f6;
    --color-bg-hover: #e0e7ef;
    --color-text: #222;
    --color-white: #fff;
  }
  .projects-wrapper {
    display: flex;
    justify-content: center;
    padding: 2.5rem 1.5rem 2.5rem 1.5rem;
    width: 100%;
    box-sizing: border-box;
  }
  ul {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
    gap: 2.5rem;
    margin-inline: 0;
    width: 100%;
    max-width: 1200px;
  }
  .project-card {
    list-style: none;
    height: 100%;
  }
  article {
    border-radius: 18px;
    box-shadow: 0 4px 24px #00000044;
    background: var(--card-bg-color);
    display: flex;
    flex-direction: column;
    padding: 1.5rem 1.2rem 1.2rem 1.2rem;
    height: 100%;
    transition: box-shadow 0.25s, transform 0.22s;
    border: 1.5px solid var(--card-border-color);
  }
  article:hover {
    box-shadow: 0 12px 36px #00000066;
    transform: translateY(-6px) scale(1.025);
    border: 1.5px solid var(--primary-color);
  }
  .project-image {
    width: 100%;
    height: 180px;
    display: flex;
    align-items: center;
    justify-content: center;
    background: var(--bg-color);
    border-radius: 18px 18px 0 0;
    overflow: hidden;
  }
  .project-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: top center;
    display: block;
  }
  .project-placeholder {
    font-size: 2.5rem;
    color: #bdbdbd;
  }
  .project-title {
    font-size: 1.18rem;
    font-weight: 700;
    margin: 16px 0 4px 0;
    display: flex;
    align-items: center;
    gap: 8px;
    justify-content: center;
    text-align: center;
  }
  .project-title a {
    color: var(--heading-color);
    text-decoration: none;
    transition: color 0.2s;
  }
  .project-title a:hover {
    text-decoration: underline;
    color: var(--primary-color);
  }
  .project-dot {
    color: var(--secondary-color);
    font-size: 1.2em;
    animation: flicker 3s ease-in infinite;
  }
  .project-desc {
    font-size: 1.01rem;
    line-height: 1.35rem;
    margin-bottom: 8px;
    color: var(--text-color);
    white-space: pre-line;
  }
  .project-demo-access {
    background: var(--bg-color);
    border: 1.5px solid var(--card-border-color);
    border-radius: 10px;
    padding: 10px 16px;
    margin: 10px 0 14px 0;
    display: flex;
    align-items: flex-start;
    gap: 12px;
    font-size: 0.98em;
  }
  .demo-icon {
    font-size: 1.6em;
    margin-top: 2px;
  }
  .project-demo-access b {
    color: var(--primary-color);
    font-family: 'Fira Mono', monospace;
  }
  .project-badges {
    display: flex;
    flex-wrap: wrap;
    gap: 8px;
    margin-bottom: 12px;
  }
  .project-badge {
    border-radius: 999px;
    background: var(--bg-color);
    color: var(--text-color);
    font-size: 0.85rem;
    font-weight: 500;
    padding: 0.3rem 1.1rem;
    letter-spacing: 0.01em;
    box-shadow: 0 1px 2px #00000044;
    transition: background 0.2s, color 0.2s;
  }
  .project-badge:hover {
    background: var(--primary-color);
    color: var(--heading-color);
  }
  .project-actions {
    display: flex;
    gap: 10px;
    margin-top: auto;
    padding: 0 16px;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
  }
  .project-btn {
    background: var(--primary-color);
    color: #fff;
    border: var(--pixel-border) solid var(--text-color);
    box-shadow: var(--pixel-shadow);
    font-family: "Press Start 2P", monospace;
    font-size: 1em;
    text-transform: uppercase;
    letter-spacing: 1px;
    border-radius: 0;
    padding: 0.45em 1.3em;
    font-weight: 500;
    text-decoration: none;
    transition: all 0.15s;
    display: flex;
    align-items: center;
    gap: 6px;
  }
  .project-btn:hover {
    background: var(--accent-color);
    color: #fff;
    transform: translate(-2px, -2px);
    box-shadow: var(--pixel-shadow-hover);
  }
  .code-btn {
    background: #374151;
    color: #fff;
    border: var(--pixel-border) solid var(--card-border-color);
  }
  .code-btn:hover {
    background: #4d96ff;
    color: #fff;
    border-color: var(--primary-color);
  }
  @keyframes flicker {
    0% { opacity: 1; }
    50% { opacity: 0.25; }
    100% { opacity: 1; }
  }
  @media (width <= 700px) {
    .projects-wrapper {
      padding: 1.2rem 0.2rem;
    }
    ul {
      grid-template-columns: 1fr;
      gap: 1.2rem;
    }
    .project-image {
      height: 80px;
    }
    .project-title {
      font-size: 1rem;
      justify-content: center;
      text-align: center;
    }
    article {
      padding: 1rem 0.5rem 0.8rem 0.5rem;
    }
    .project-actions {
      flex-direction: column;
      gap: 0.7rem;
      padding: 0 0.2rem;
      margin-top: 1.2rem;
      align-items: center;
    }
  }
  .copy-btn {
    background: none;
    border: none;
    color: var(--primary-color);
    font-family: inherit;
    font-size: inherit;
    cursor: pointer;
    padding: 0;
    margin: 0;
    transition: color 0.2s;
    position: relative;
  }
  .copy-btn.copied {
    color: var(--accent-color);
  }
</style>

<script is:inline>
  document.addEventListener('DOMContentLoaded', () => {
    document.querySelectorAll('.copy-btn').forEach(btn => {
      btn.addEventListener('click', async () => {
        const text = btn.getAttribute('data-copy');
        try {
          await navigator.clipboard.writeText(text);
          btn.classList.add('copied');
          const original = btn.textContent;
          btn.textContent = 'Â¡Copiado!';
          setTimeout(() => {
            btn.textContent = original;
            btn.classList.remove('copied');
          }, 1200);
        } catch (e) {
          btn.textContent = 'Error';
        }
      });
    });
  });
</script>
